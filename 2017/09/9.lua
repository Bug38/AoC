function readAll(file)
  local f = assert(io.open(file, "rb"))
  local content = f:read("*all")
  f:close()
  return content
end

local input = readAll("input9.txt")

--input = '{}'
--input = '{{{}}}'
--input = '{{},{}}'
--input = '{{,{},{},{{}}}}'
--input = '{{{{{},{,{}},{{{},{}}}},{{,},{},{}}},{{{{},{}},{}}},{{{},{{}},{{}}},{{{{{{},{{{},{}},{}}}},{{{}},}},{{,},{{}},{{}}},{{},{}}},{{{},},{{}},{,}},{{{},{{{}},{}}},{{}}}},{{},{{{{},},{{{{},},}}},{{,},{{,{}}}},{{},{{}}}}},{{{},{{{{},{{}}},{},{{},}},{{,},{{},{{{},}},{,{}}},{{}}},{{{},{}},{},{,}},{{{,},{{{},}}},{{},{}},{{},{{},{}}}}},{},{{{{{,{}},{}},{{},{}},{{{},{,}},}},{{},{}}},{{}},{,{{},{}}}}},{{{},{,},{{{,},{,{}},{}},{}}},{{{},{{},{{,{}},}},{{}}},{{,{{}}},{}},{{{},},{{}}}},{{},{}}},{{},{},{,{}}},{{{,{,{}}}}}}}},{{{{{}},{}},{{{,{}},{},{{},{}}},{{{,{}},{{}},{,}},{}},{{{},{}},{}}},{{{{{}},{{{{},{,{}}}}}},{},{{},{}}},{,{}}},{{{},},{{}},{{{},{{},{{},{}}}},{{}}}}},{{{{{{}}},{}},{{{{{}}}},},{{},{}}},{{{,{}},{{},{{}}},{,}},{},{{},{{{},{}},{,{{}}}},{{{},{}},{{},}}}},{{{{{,{{}}},{}}},{{{{{{}}},{{{{,{}}},{{{{},{}},{},{{},}},{{},{}},{{},{{}}}},{{},{}}},{,},{{,{}},{{{}},{,{}}}}},{{{{{,}},{{},{}}},{{{}},{},{,}},{{{}},{{{},{}},{{{},},{{,},{,},{,}},{{{{},},{}}}}},{}}},{,{}},{{}}}},{{{},{{}}},{,{}}}},{{{{},},{}},{{,{{},{}}}}},{{{{{{},}},{{}},{}},{{},{,},{{},{}}},{{{{},{}},},{{{},},{,{}},{{{{{},{}},{}}}}},{}},{{{{},},{}},{{{,{}},{}},{}},{{{},},{{,{{}}},{}},{,{}}},{{{{{}}},{}},{{{}},{{},},{{{,{{}}},{,}},{{},{}}}},{{}}}}},{{},{,}}}},{{{},{}},{{},}},{{},{,},{}}},{{{,},{,{}},{{},}},{{}},{{},}},{{{}}},{}}}},{{{{{{,{}},{{},}},{{{}},{{},{}},{{},}},{{},{{},{}},{{{},},{}}},{{,{{}}},{},{{{},},{}}}},{{},{{}}},{{,{{},{{}}}},{,{{}}},{{{},{}}}}},{{{{{,{{{}}}},{}},{{}}},{{{{{{}}},{{},{}}},{},{{{},},{,{{}}},{,{}}}},{{},{{}},{,{}}}},{{{},{},{}}}},{{{{}},{}},{{},{},{}}},{{}}},{{{{{{},{},{,{}}},{{,{{}}},{}},{{{},{}},}}},{{,},{{,},{}},{}},{},{{,{}},{{}},{{{},{{{},},{}}},{{,{}},{{,{}},}},{{},{{{}},{{{}},}}}}}},{{{{},{,{{},}},{{},}},{{,},{{}}}}},{{{{}},{{{},},{,}},{,}},{{{,{{},{}}},{{{},},{{,{}},{}}},{{{},{{{}},{{},{}},{{{{{}}},},{,{}}}}}}},{{{},{}},{,}}},{{{},{}}},{{{{{},{}}},{{{}},{,},{{{}},{{{}}}}},{}},{{{},{}},{,{{}}}},{{{{},{}},{{,}}},{},{{{}},{{{}},{{}}},{{,},{}}}},{{{},{{{}}}},{}}}},{{{,{,{}}},{,{}},{{,},{{}},{}}},{{{}},{{}},{{{}},{}}}}}},{{},{{{{},{{}},{{{{},{}},{{}},{{{}}}},{}},{{,{}},{{},{,{}},{,}}}},{{{,{}}},{{{{{},{{}}},{}},{{}}},{},{}}},{{{},{}},{{{}},{}}}},{{{{,{}}},{,{}},{{},{}}},{{{{,{}},{{}}},{{{,{{,{}},}}},{,},{{},{,{{}}}}},{{{}},{{},{{},{}}},{}},{{{{},{{,}}},{{}}},{{{},{{},}}},{{{{{}},{,}},{{,{{,},{}}},{,{}},{{{,{}},{,}},{{{}},},{{},{{},},{{}}}}},{{,},{{},{,{{,},{,{}}}}},{,}},{{,{}},{}}},{{{{},{{},{}}},{{},{}},{{},}},{{{},{}},{}},{{},{}}},{{{{},},{{{{}}}}},{{{}},{,}},{{{{}},{}},{,}},{{{}},{,{}}}}}}},{{{{},{{{{}}},{{{}}}}},{{},{}},{{{},{}},}},{{{}},{{},{}}},{{{{{{}},{}},{}},{{{,},{{},{}},{{,{}}}},{{,{}}},{{}}}},{{{},},{}},{{},{},{}}}},{{{{}}}},{{{,{}},{{},{{},{{},}}}},{{},{,}},{{{}},{{{{{}},},{{}}},{}},{{}}},{{{{{},{}},{},{,{}}}},{{},{{{{,{}}}},{{{}},{}}},{{,{}},{}},{{{,{}},{{},{{{,{,}},},}},{}},{}}}}}},{{},{{},}},{{{},{}},{},{{},{},{{},{{}}}}}},{{{},{{},{}},{{},}},{{,},{{,},{}},{{{,{}},{{{},},{},{{},{}}},{,{{},}}},{{,},{{},{}},{{},{}}}}},{{{},{{}}},{{{},{}},{{{{}},{}}},{{{}}}},{{},{}}},{{,{{{{{}}},},{,}}},{{},}}},{{{{,},{{,{}}},{}},{{,{}},{},{{}}},{{,},{{,}},{,}}},{{{,}},{{}}},{{},{{},{{},}}},{{{},},{{}},{{}}}},{{{}},{{{}},{{},}},{{},{,{,}}}}}},{{{{{},{}},{{{{{{}},},{,{}},{{{},{{{},{}},},{,{}}}}},{{}},{}},{{,{}}}},{{}}},{{{{{}}}}},{{},{{{},{{{{}},{{},}},}},},{{{}}}}},{{{{{}},{,{{}}}},{,{}},{{},{{},}}},{},{{},{{},{}},{}}}},{{{{{,{}},{}},{}},{{},{},{,}},{{{,{}},{}},{{{,},{{}}},},{{}}},{{,},{{},{}},{,{}}}}},{{{{{}}},{{{},{}},{,}},{{{{{{},},{,},{{},{}}},{,},{{{},},}},{,}},{{{},{}},{{{{,{}},{{}}}},{{}}},{{},{}}},{{{{{},},{}},{{,},{,{}},{}}},{{},}}}},{{{,},{{},{}},{,{{}}}},{{,}},{{{},},{,{{}}}}},{{{}}},{},{{{{{}}},{}},{{,{{{}}}},{{{},},},{{},{,}}},{{{},{}},{,{}},{}},{{{},},{{},{{},{}}},{}}}},{{{{},{{{{{{},},{}},{{}}}},{{{{{}},{{{{{{{}}},}},{{,{}},{}},{,{{}}}},{,{{,},{}}},{{},{},{{{},{{}}}}}},{{},}},{{},{{,{{}}}},{}},{}}},{{,{,}},{{}}},{{{},{}},{{},{}}}},{{{},}},{{,{}}}},{{{{,{}}},{{{{{},{}}}},{{},{{,{}},{,{,}}},{{}}}},{{},{{}}},{{},{{},{{{}},}},{}}},{{{},{{},{}}},{,},{}},{{{{}}}}}},{{{{{},{{}}},{{{{}},{,{}},{{,{}},{{}},{}}},{}}},{{{{},{{},{}},{,{}}},{{,{}}},{{},{},{{{},{},{{},{}}},{},{,{}}}}},{{,{,}}},{{{},{{}},{{,},{},{}}},{},{{,{}}}},{{}}},{{{},{,}},{{{{{,{}},{{{}},{{}},{{},{{},{}}}},{{},{{}}}},{{}},{{},}}},{{{{,{{}}},{{{{},},{}},{{},{},{{{}},}}},{{,{,}},{}}},{,{}},{}},{{{{},},}},{{{,{}},{}},{{},{}},{{},}},{{},{,}}}},{{{{{{,{}},{,{{{}}}}},{{}},{,}},{{}}}}},{{{{},{}}},{{,{}},{{{},{}},{{}}}},{{{}},{},{{,{{}}},{}}}}},{{},{{,},{{{,{{}}},{}}},{{{},{}},{}}},{{{{{{},},},},{,},{}}},{{{{,{}},{}}}}},{{{},{{{}},{{},},{{},{}}},{{,}}},{{{{},},{}},{,},{{}}}}}},{{{},{,{}},{}},{{{{{{},{}},{{}}},{},{{{{},{}},{{}}}}},{{{{},},{{}}},{{},{{},{,{}}}},{{}}},{{{},},{{{{{,{}}}},}}},{{},{{},{{{,}},{{{{}}},}}},{{},}}},{{{{{{{,},}}},{{}}},{{{}},{}}},{{{{}}},{{},{},{{{},},{{{},}}}},{{,},{{{},{}},{{},}}}},{{{,{}},{},{,}},{,},{}}},{{{},{,}},{{}}}}}}},{}}'
--input = '{<{},{},{{}}>}'
--input = '{<a>,<a>,<a>,<a>}'
--input = '{{<<<<a>},{<a>},{<a>},{<a>}}'
--input = '{{<!>},{<!>},{<!>},{<a>}}'

--------------------------
----- DAY 9 --------------
--------------------------

local caracters = {
  garbOpen   = '<',
  garbClose  = '>',
  groupOpen  = '{',
  groupClose = '}',
  cancel     = '!',
}

input = input:gsub("!.","")           -- remove canceled

local totalGarbaged = 0

for garbage in input:gmatch("<<*.->") do
  garbage = garbage:gsub("<(<*.-)>","%1")
  totalGarbaged = totalGarbaged + #garbage
end

print(totalGarbaged)

input = input:gsub("<<*.->","")       -- remove garbage

local currentLevel = 0
local count = 0

for i=1,#input do
  local letter = input:sub(i,i)
  if letter == "{" then
    currentLevel = currentLevel + 1
    count = count + currentLevel
  elseif letter == "}" then
    currentLevel = currentLevel - 1
  end
end

print(count)